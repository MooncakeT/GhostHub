//---- Games ----------------------------------------------------------------
playGame
{
	"\0\s[2]\b2%(cf)Of course I would! What do you want to play?\n\n"
	--
 	"%(df)\![*]\q[Rock Paper Scissors,choiceRPS]\n\n[half]/
 	\![*]\q[Number Guess,choiceNumGuess]\n\n[half]/
 	\![*]\q[Tic Tac Toe,choiceTTT]\n\n[half]/
 	\![*]\q[Word Guess,choiceHangman]\n\n/
 	\![*]\q[Back to the menu,BACKTOMENU]\e"
}

Select.playGame
{
	playGame
}

Select.choiceRPS
{
	playRPS
}

Select.choiceNumGuess
{
	playNumGuess
}

Select.choiceTTT
{
	pchoice = "_________"
	TTTplays++
	playTTT
}

Select.choiceHangman
{
	HangmanPlays++
	aichoice = hangmanwords
	pchoice = ""
	counter = 0
	while (counter < STRLEN(aichoice))
	{
		pchoice = SUBSTR(pchoice,0,STRLEN(pchoice)) + "-"
		counter++
	}
	playHangman
}


//---- Rock Paper Scissors ----------------------------------------------------------------
playRPS
{
	"\0\s[2]%(cf)\![enter,passivemode]Alright!\w3\s[0]\w5 Rock, paper, scissors, \s[2]shoot!\n\n"
	--
	"%(df)\![*]\q[Rock,choiceRock]\n\n[half]/
	\![*]\q[Paper,choicePaper]\n\n[half]/
	\![*]\q[Scissors,choiceScissors]"
}

Select.choiceRock
	{
		pchoice = "rock";

		RPScheckWin
	}

Select.choicePaper
	{
		pchoice = "paper";
		
		RPScheckWin
	}

Select.choiceScissors
	{
		pchoice = "scissors";
		
		RPScheckWin
	}

RPScheckWin
{
	RPSplays++
	aichoice = RAND(3);

	if aichoice == 0 {aichoice = "rock"}
	elseif aichoice == 1 {aichoice = "paper"}
	elseif aichoice == 2 {aichoice = "scissors"}

	"\b2\0\s[0]%(cf)I chose %(aichoice), and you chose %(pchoice).\w8\w8\n\n"
	--
	if aichoice == pchoice
	{
		"\0\s[0]%(cf)We chose the same thing, \0\s[2]so it's a tie!"
	}else{
		if aichoice == "rock" {
			if pchoice == "paper" {
				"\0\s[12]%(cf)Aw man, you won."
				RPSpWins++
			}else{
				"\0\s[2]%(cf)Yay! I won!"
				RPSaiWins++
			}
		}elseif aichoice == "paper" {
			if pchoice == "scissors" {
				"\0\s[12]%(cf)Aw man, you won."
				RPSpWins++
			}else{
				"\0\s[2]%(cf)Yay! I won!"
				RPSaiWins++
			}
		}else{
			if pchoice == "rock" {
				"\0\s[12]%(cf)Aw man, you won."
				RPSpWins++
			}else{
				"\0\s[2]%(cf)Yay! I won!"
				RPSaiWins++
			}
		}
	}
	--
	"\n\n\w8\w7\0\s[0]%(cf)Want to play again?\![leave,passivemode]\n\n"
	--
	"%(df)\![*]\q[Again again!,choiceRPS]\n\n[half]/
	%(df)\![*]\q[Wanna play something else?,playGame]\n\n/
 	\![*]\q[No thanks,CANCEL]\e"
}


//---- Number Guess ----------------------------------------------------------------
playNumGuess
{
	NumGuessPlays++

	aichoice = RAND(100) + 1

	"\0\s[0]%(cf)\![enter,passivemode]I'm thinking of a number between 1 and 100, \s[2]try to guess what it is!\![open,inputbox,OnNumGuess]"
}

OnNumGuess
{
	pchoice = reference0

	if pchoice == aichoice
	{
		NumGuessWins++

		"\0\s[2]%(cf)You guessed my number! Good job!\w8\![leave,passivemode]\n\n"
		--
		"%(df)\![*]\q[Again again!,choiceNumGuess]\n\n[half]/
		%(df)\![*]\q[Wanna play something else?,playGame]\n\n/
 		\![*]\q[No thanks,CANCEL]\e"

	}
	elseif (pchoice < 1) || (pchoice > 100)
	{
		"\0\s[0]%(cf)It's between 1 and 100, silly! Try again!\n\n%(df)\![*]\q[I give up!,NumForfeit]\![open,inputbox,OnNumGuess,-1]"
	}
	elseif pchoice > aichoice
	{
		"\0\s[0]%(cf)Lower!\n\n%(df)\![*]\q[I give up!,NumForfeit]\![open,inputbox,OnNumGuess,-1]"
	}
	elseif pchoice < aichoice
	{
		"\0\s[0]%(cf)Higher!\n\n%(df)\![*]\q[I give up!,NumForfeit]\![open,inputbox,OnNumGuess,-1]"
	}
	else
	{
		"\0\s[0]%(cf)Make a guess!\n\n%(df)\![*]\q[I give up!,NumForfeit]\![open,inputbox,OnNumGuess,-1]"
	}
}

Select.NumForfeit
{
	"\0\s[0]%(cf)\![close,inputbox]My number was %(aichoice). I'm sure you'll get it next time!\![leave,passivemode]\n\n"
	--
	"%(df)\![*]\q[Again again!,choiceNumGuess]\n\n[half]/
	%(df)\![*]\q[Wanna play something else?,playGame]\n\n/
 	\![*]\q[No thanks,CANCEL]\e"
}


//---- Hangman ---------------------------------------------------------------------
playHangman
{
	"\0\s[0]%(cf)\![enter,passivemode]I'm thinking of a word, try to guess what letters are in it!\n\n[half]%(df)%(pchoice)\n\n%(df)\![*]\q[I give up!,WordForfeit]\![open,inputbox,OnLetterGuess]"
}

OnLetterGuess{
	reference0 = TOLOWER(reference0)
	if (STRLEN(reference0) == 0){
		"\0\s[0]%(cf)You have to guess something!\n\n%(df)\![*]\q[I give up!,WordForfeit]\![open,inputbox,OnLetterGuess]"
	}
	if (STRLEN(reference0) > 1){
		"\0\s[0]%(cf)Only guess 1 letter please!\n\n%(df)\![*]\q[I give up!,WordForfeit]\![open,inputbox,OnLetterGuess]"
	}
	/*if (!ISALNUM(reference0)){
		"\0\s[0]%(cf)You have to guess a letter!\n\n%(df)\![*]\q[I give up!,WordForfeit]\![open,inputbox,OnLetterGuess]"
	}
*/
	counter = 0
	while (counter < STRLEN(aichoice)){
		if (reference0 == SUBSTR(aichoice,counter,1)){
			pchoice = SUBSTR(pchoice,0,counter) + reference0 + SUBSTR(pchoice,counter+1,STRLEN(pchoice)-counter)
		}
		counter++
	}
	HMcheckWin
}

HMcheckWin{
	if (pchoice == aichoice){
		HangmanWins++
		"\0\s[2]%(cf)Yay! You guessed my word! It was '%(aichoice)'!\![leave,passivemode]\n\n"
		--
		"%(df)\![*]\q[Again again!,choiceHangman]\n\n[half]/
		%(df)\![*]\q[Wanna play something else?,playGame]\n\n/
 		\![*]\q[No thanks,CANCEL]\e"
	}else{
		"\0\s[0]%(cf)Guess again!\n\n[half]%(df)%(pchoice)\n\n%(df)\![*]\q[I give up!,WordForfeit]\![open,inputbox,OnLetterGuess]"
	}
}

Select.WordForfeit
{
	"\0\s[0]%(cf)\![close,inputbox]My word was '%(aichoice)'. I'm sure you'll get it next time!\![leave,passivemode]\n\n"
	--
	"%(df)\![*]\q[Again again!,choiceHangman]\n\n[half]/
	%(df)\![*]\q[Wanna play something else?,playGame]\n\n/
 	\![*]\q[No thanks,CANCEL]\e"
}


//---- Tic Tac Toe ----------------------------------------------------------------
playTTT
{
	"\0\s[0]%(df)\f[height,18] \_q\q[%(SUBSTR(pchoice,0,1)),choice0] | \q[%(SUBSTR(pchoice,1,1)),choice1] | \q[%(SUBSTR(pchoice,2,1)),choice2] \n \q[%(SUBSTR(pchoice,3,1)),choice3] | \q[%(SUBSTR(pchoice,4,1)),choice4] | \q[%(SUBSTR(pchoice,5,1)),choice5] \n \q[%(SUBSTR(pchoice,6,1)),choice6] | \q[%(SUBSTR(pchoice,7,1)),choice7] | \q[%(SUBSTR(pchoice,8,1)),choice8] \f[height,default]\e"
}

TTTcheckWin
{
	// Check player win
	if SUBSTR(pchoice,0,3) == "XXX" // first row
	{
		aichoice = "pwin"
		TTTWinner
	}
	elseif SUBSTR(pchoice,3,3) == "XXX" // second row
	{
		aichoice = "pwin"
		TTTWinner
	}
	elseif SUBSTR(pchoice,6,3) == "XXX" // third row
	{
		aichoice = "pwin"
		TTTWinner
	}
	elseif (SUBSTR(pchoice,0,1) == SUBSTR(pchoice,3,1)) && (SUBSTR(pchoice,3,1) == SUBSTR(pchoice,6,1)) && (SUBSTR(pchoice,0,1) == "X") // first column
	{
		aichoice = "pwin"
		TTTWinner
	}
	elseif (SUBSTR(pchoice,1,1) == SUBSTR(pchoice,4,1)) && (SUBSTR(pchoice,4,1) == SUBSTR(pchoice,7,1)) && (SUBSTR(pchoice,1,1) == "X") // second column
	{
		aichoice = "pwin"
		TTTWinner
	}
	elseif (SUBSTR(pchoice,2,1) == SUBSTR(pchoice,5,1)) && (SUBSTR(pchoice,5,1) == SUBSTR(pchoice,8,1)) && (SUBSTR(pchoice,2,1) == "X") // third column
	{
		aichoice = "pwin"
		TTTWinner
	}
	elseif (SUBSTR(pchoice,0,1) == SUBSTR(pchoice,4,1)) && (SUBSTR(pchoice,4,1) == SUBSTR(pchoice,8,1)) && (SUBSTR(pchoice,0,1) == "X") // top-left to bottom-right
	{
		aichoice = "pwin"
		TTTWinner
	}
	elseif (SUBSTR(pchoice,2,1) == SUBSTR(pchoice,4,1)) && (SUBSTR(pchoice,4,1) == SUBSTR(pchoice,6,1)) && (SUBSTR(pchoice,2,1) == "X") // bottom-left to top-right
	{
		aichoice = "pwin"
		TTTWinner
	}
	// Check for tie
	elseif (SUBSTR(pchoice,0,1) != "_") && (SUBSTR(pchoice,1,1) != "_") && (SUBSTR(pchoice,2,1) != "_") && (SUBSTR(pchoice,3,1) != "_") && (SUBSTR(pchoice,4,1) != "_") && (SUBSTR(pchoice,5,1) != "_") && (SUBSTR(pchoice,6,1) != "_") && (SUBSTR(pchoice,7,1) != "_") && (SUBSTR(pchoice,8,1) != "_")
	{
		aichoice = "tie"
		TTTWinner
	}
	else
	{
		// AI choice & play (Goes for win if possible)
		if (SUBSTR(pchoice,0,1) == "O") && (SUBSTR(pchoice,1,1) == "O") && (SUBSTR(pchoice,2,1) == "_") // top row OO_
		{
			pchoice = SUBSTR(pchoice,0,2) + "O" + SUBSTR(pchoice,3,6)
		}
		elseif (SUBSTR(pchoice,0,1) == "O") && (SUBSTR(pchoice,2,1) == "O") && (SUBSTR(pchoice,1,1) == "_") // top row O_O
		{
			pchoice = SUBSTR(pchoice,0,1) + "O" + SUBSTR(pchoice,2,7)
		}
		elseif (SUBSTR(pchoice,1,1) == "O") && (SUBSTR(pchoice,2,1) == "O") && (SUBSTR(pchoice,0,1) == "_") // top row _OO
		{
			pchoice = "O" + SUBSTR(pchoice,1,8)
		}
		elseif (SUBSTR(pchoice,3,1) == "O") && (SUBSTR(pchoice,4,1) == "O") && (SUBSTR(pchoice,5,1) == "_") // mid row OO_
		{
			pchoice = SUBSTR(pchoice,0,5) + "O" + SUBSTR(pchoice,6,3)
		}
		elseif (SUBSTR(pchoice,3,1) == "O") && (SUBSTR(pchoice,5,1) == "O") && (SUBSTR(pchoice,4,1) == "_") // mid row O_O
		{
			pchoice = SUBSTR(pchoice,0,4) + "O" + SUBSTR(pchoice,5,4)
		}
		elseif (SUBSTR(pchoice,4,1) == "O") && (SUBSTR(pchoice,5,1) == "O") && (SUBSTR(pchoice,3,1) == "_") // mid row _OO
		{
			pchoice = SUBSTR(pchoice,0,3) + "O" + SUBSTR(pchoice,4,5)
		}
		elseif (SUBSTR(pchoice,6,1) == "O") && (SUBSTR(pchoice,7,1) == "O") && (SUBSTR(pchoice,8,1) == "_") // bot row OO_
		{
			pchoice = SUBSTR(pchoice,0,8) + "O"
		}
		elseif (SUBSTR(pchoice,6,1) == "O") && (SUBSTR(pchoice,8,1) == "O") && (SUBSTR(pchoice,7,1) == "_") // bot row O_O
		{
			pchoice = SUBSTR(pchoice,0,7) + "O" + SUBSTR(pchoice,8,1)
		}
		elseif (SUBSTR(pchoice,7,1) == "O") && (SUBSTR(pchoice,8,1) == "O") && (SUBSTR(pchoice,6,1) == "_") // bot row _OO
		{
			pchoice = SUBSTR(pchoice,0,6) + "O" + SUBSTR(pchoice,7,2)
		}
		elseif (SUBSTR(pchoice,0,1) == "O") && (SUBSTR(pchoice,3,1) == "O") && (SUBSTR(pchoice,6,1) == "_") // left col OO_
		{
			pchoice = SUBSTR(pchoice,0,6) + "O" + SUBSTR(pchoice,7,2)
		}
		elseif (SUBSTR(pchoice,0,1) == "O") && (SUBSTR(pchoice,6,1) == "O") && (SUBSTR(pchoice,3,1) == "_") // left col O_O
		{
			pchoice = SUBSTR(pchoice,0,3) + "O" + SUBSTR(pchoice,4,5)
		}
		elseif (SUBSTR(pchoice,3,1) == "O") && (SUBSTR(pchoice,6,1) == "O") && (SUBSTR(pchoice,0,1) == "_") // left col _OO
		{
			pchoice = "O" + SUBSTR(pchoice,1,8)
		}
		elseif (SUBSTR(pchoice,1,1) == "O") && (SUBSTR(pchoice,4,1) == "O") && (SUBSTR(pchoice,7,1) == "_") // mid col OO_
		{
			pchoice = SUBSTR(pchoice,0,7) + "O" + SUBSTR(pchoice,8,1)
		}
		elseif (SUBSTR(pchoice,1,1) == "O") && (SUBSTR(pchoice,7,1) == "O") && (SUBSTR(pchoice,4,1) == "_") // mid col O_O
		{
			pchoice = SUBSTR(pchoice,0,4) + "O" + SUBSTR(pchoice,5,4)
		}
		elseif (SUBSTR(pchoice,4,1) == "O") && (SUBSTR(pchoice,7,1) == "O") && (SUBSTR(pchoice,1,1) == "_") // mid col _OO
		{
			pchoice = SUBSTR(pchoice,0,1) + "O" + SUBSTR(pchoice,2,7)
		}
		elseif (SUBSTR(pchoice,2,1) == "O") && (SUBSTR(pchoice,5,1) == "O") && (SUBSTR(pchoice,8,1) == "_") // right col OO_
		{
			pchoice = SUBSTR(pchoice,0,8) + "O"
		}
		elseif (SUBSTR(pchoice,2,1) == "O") && (SUBSTR(pchoice,8,1) == "O") && (SUBSTR(pchoice,5,1) == "_") // right col O_O
		{
			pchoice = SUBSTR(pchoice,0,5) + "O" + SUBSTR(pchoice,6,3)
		}
		elseif (SUBSTR(pchoice,5,1) == "O") && (SUBSTR(pchoice,8,1) == "O") && (SUBSTR(pchoice,2,1) == "_") // right col _OO
		{
			pchoice = SUBSTR(pchoice,0,2) + "O" + SUBSTR(pchoice,3,6)
		}
		elseif (SUBSTR(pchoice,0,1) == "O") && (SUBSTR(pchoice,4,1) == "O") && (SUBSTR(pchoice,8,1) == "_") // topleft-botright diag OO_
		{
			pchoice = SUBSTR(pchoice,0,8) + "O"
		}
		elseif (SUBSTR(pchoice,0,1) == "O") && (SUBSTR(pchoice,8,1) == "O") && (SUBSTR(pchoice,4,1) == "_") // topleft-botright diag O_O
		{
			pchoice = SUBSTR(pchoice,0,4) + "O" + SUBSTR(pchoice,5,4)
		}
		elseif (SUBSTR(pchoice,4,1) == "O") && (SUBSTR(pchoice,8,1) == "O") && (SUBSTR(pchoice,0,1) == "_") // topleft-botright diag _OO
		{
			pchoice = "O" + SUBSTR(pchoice,1,8)
		}
		elseif (SUBSTR(pchoice,6,1) == "O") && (SUBSTR(pchoice,4,1) == "O") && (SUBSTR(pchoice,2,1) == "_") // botleft-topright diag OO_
		{
			pchoice = SUBSTR(pchoice,0,2) + "O" + SUBSTR(pchoice,3,6)
		}
		elseif (SUBSTR(pchoice,6,1) == "O") && (SUBSTR(pchoice,2,1) == "O") && (SUBSTR(pchoice,4,1) == "_") // botleft-topright diag O_O
		{
			pchoice = SUBSTR(pchoice,0,4) + "O" + SUBSTR(pchoice,5,4)
		}
		elseif (SUBSTR(pchoice,4,1) == "O") && (SUBSTR(pchoice,2,1) == "O") && (SUBSTR(pchoice,6,1) == "_") // botleft-topright diag _OO
		{
			pchoice = SUBSTR(pchoice,0,6) + "O" + SUBSTR(pchoice,7,2)
		}
		else
		{
			aichoice = RAND(8)
			while SUBSTR(pchoice,aichoice,1) != "_" // Make sure ai choice is empty space
			{
				aichoice = RAND(8)
			}

			// Insert ai choice
			if aichoice != 8
			{
				pchoice = SUBSTR(pchoice,0,aichoice) + "O" + SUBSTR(pchoice,aichoice+1,8-aichoice)
			}else{
				pchoice = SUBSTR(pchoice,0,8) + "O"
			}
		}


		// Check ai win
		if SUBSTR(pchoice,0,3) == "OOO" // first row
		{
			aichoice = "aiwin"
			TTTWinner
		}
		elseif SUBSTR(pchoice,3,3) == "OOO" // second row
		{
			aichoice = "aiwin"
			TTTWinner
		}
		elseif SUBSTR(pchoice,6,3) == "OOO" // third row
		{
			aichoice = "aiwin"
			TTTWinner
		}
		elseif (SUBSTR(pchoice,0,1) == SUBSTR(pchoice,3,1)) && (SUBSTR(pchoice,3,1) == SUBSTR(pchoice,6,1)) && (SUBSTR(pchoice,0,1) == "O") // first column
		{
			aichoice = "aiwin"
			TTTWinner
		}
		elseif (SUBSTR(pchoice,1,1) == SUBSTR(pchoice,4,1)) && (SUBSTR(pchoice,4,1) == SUBSTR(pchoice,7,1)) && (SUBSTR(pchoice,1,1) == "O") // second column
		{
			aichoice = "aiwin"
			TTTWinner
		}
		elseif (SUBSTR(pchoice,2,1) == SUBSTR(pchoice,5,1)) && (SUBSTR(pchoice,5,1) == SUBSTR(pchoice,8,1)) && (SUBSTR(pchoice,2,1) == "O") // third column
		{
			aichoice = "aiwin"
			TTTWinner
		}
		elseif (SUBSTR(pchoice,0,1) == SUBSTR(pchoice,4,1)) && (SUBSTR(pchoice,4,1) == SUBSTR(pchoice,8,1)) && (SUBSTR(pchoice,0,1) == "O") // top-left to bottom-right
		{
			aichoice = "aiwin"
			TTTWinner
		}
		elseif (SUBSTR(pchoice,2,1) == SUBSTR(pchoice,4,1)) && (SUBSTR(pchoice,4,1) == SUBSTR(pchoice,6,1)) && (SUBSTR(pchoice,2,1) == "O") // bottom-left to top-right
		{
			aichoice = "aiwin"
			TTTWinner
		}
		else
		{
			playTTT
		}
	}
}

TTTWinner
{
	if aichoice == "pwin"
	{
		TTTpWins++
		"\0\s[0]%(cf)You won!\n\n"
	}
	elseif aichoice == "aiwin"
	{
		TTTaiWins++
		"\0\s[0]%(cf)I won!\n\n"
	}
	else
	{
		"\0\s[0]%(cf)Looks like it was a tie...\n\n"
	}
	--
	"%(df)\![*]\q[Again again!,choiceTTT]\n\n[half]/
	%(df)\![*]\q[Wanna play something else?,playGame]\n\n/
 	\![*]\q[No thanks,CANCEL]\e"
}

Select.choice0
{
	if SUBSTR(pchoice,0,1) == "_"
	{
		pchoice = "X" + SUBSTR(pchoice,1,8)
		TTTcheckWin
	}else{
		playTTT
	}
}

Select.choice1
{
	if SUBSTR(pchoice,1,1) == "_"
	{
		pchoice = SUBSTR(pchoice,0,1) + "X" + SUBSTR(pchoice,2,7)
		TTTcheckWin
	}else{
		playTTT
	}
}

Select.choice2
{
	if SUBSTR(pchoice,2,1) == "_"
	{
		pchoice = SUBSTR(pchoice,0,2) + "X" + SUBSTR(pchoice,3,6)
		TTTcheckWin
	}else{
		playTTT
	}
}

Select.choice3
{
	if SUBSTR(pchoice,3,1) == "_"
	{
		pchoice = SUBSTR(pchoice,0,3) + "X" + SUBSTR(pchoice,4,5)
		TTTcheckWin
	}else{
		playTTT
	}
}

Select.choice4
{
	if SUBSTR(pchoice,4,1) == "_"
	{
		pchoice = SUBSTR(pchoice,0,4) + "X" + SUBSTR(pchoice,5,4)
		TTTcheckWin
	}else{
		playTTT
	}
}

Select.choice5
{
	if SUBSTR(pchoice,5,1) == "_"
	{
		pchoice = SUBSTR(pchoice,0,5) + "X" + SUBSTR(pchoice,6,3)
		TTTcheckWin
	}else{
		playTTT
	}
}

Select.choice6
{
	if SUBSTR(pchoice,6,1) == "_"
	{
		pchoice = SUBSTR(pchoice,0,6) + "X" + SUBSTR(pchoice,7,2)
		TTTcheckWin
	}else{
		playTTT
	}
}

Select.choice7
{
	if SUBSTR(pchoice,7,1) == "_"
	{
		pchoice = SUBSTR(pchoice,0,7) + "X" + SUBSTR(pchoice,8,1)
		TTTcheckWin
	}else{
		playTTT
	}
}

Select.choice8
{
	if SUBSTR(pchoice,8,1) == "_"
	{
		pchoice = SUBSTR(pchoice,0,8) + "X"
		TTTcheckWin
	}else{
		playTTT
	}
}