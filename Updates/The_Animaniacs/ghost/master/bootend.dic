//---------------------------Booting and Ending--------------------------

//This .dic file is set aside for booting and ending dialogue, as well as a few other functions.

/* This file has:
OnFirstBoot
NameInput
First pronoun stuff
GetDaySlot/GetTimeSlot
OnBoot
normalboottalk
OnClose
OnWindowStateRestore
OnGhostChanging
OnGhostChanged
OnShellChanging
OnShellChanged
OnDressupChanged
*/


//--OnFirstBoot--

//*********************Advanced User Info*******************************
//Because this only runs once and under an odd set of circumstances, it can be hard to test if this function is working properly. Trying to run the entire function using \![raise,OnFirstBoot] will instead bring up your alternate dialogue, so sadly you can't check it that way. You CAN get it to run using \![raise,OnFirstBoot,0] though.
//***********************************************************************


OnFirstBoot
{
//OnFirstBoot begins with some code at first to define some values your ghost will be using.

 	lastTalk = "" //This is part of how chained conversations work (see aitalk.dic).
	passhour = 0
	passmin = 0 
	passsec = 0 // These keep track of the time.
 	username = "user" //This sets a temporary name for the user. It'll be replaced when they tell the ghost their name.
	stroke = 0	// Sets their being-pet state to zero.
 	teachusername = 0	// Related to them learning your name.
	mikireflag = 0	// Determines behavior at certain points.
 	aitalkinterval = 300 //Their default talk rate.
 	birthdayprint = "????" //A temporary value for the user's birthday.
	talktime = "5 minutes" //How the value aitalkinterval will display in the config menu.
	deleteshitai = "OFF" //Sets whether or not the user can uninstall the ghost to "OFF". The user can change it later in the config menu (see menu.dic). 
	nowshell = "master" //This is for a special if check in aitalk.dic to see what shell the ghost is using. You should use the name of your default shell folder here.
	firstboot = 1 //This marks that this is the first time you've run the ghost. It's so it won't reroute to general name changing dialogue when the user inputs their name.
	
	//Other vars
	dotPets = 0; //Track pets given Dot
	yakPets = 0; //Track pets given Yakko
	wakPets = 0; //Track pets given Wakko


	if reference0 == 0 
 	{
		//Unlike most dialogue, it should start with "\![enter,passivemode]". Passivemode basically ensures that the balloons won't disappear, the choices won't time out, the ghosts won't talk randomly, you can't bring up menus, and makes sure that this dialogue plays through to the end correctly.
		
		"\![enter,passivemode]\1\s[10]\0\s[0]\p[2]\s[24]\_sHelloOooOoo Nora!! \_s\w8\w8\w8\1\s[12]Hold up guys, this isn't Nora. \w8\0\s[0]Well who is it then? \w7\1\s[12]How should I know? \s[22]This is the place Nora put in her planner. \p[2]\s[26]Let me see! \1\s[10]\p[2]\s[30]\w8Hmmm.\w2.\w2. \w8\w4Well would you look at that, this really is the place she wrote down!\w8\s[24] \0\s[0]If we're in the right place, \w3but Nora's not here.\w2.\w2.\w5\1\s[14]She duped us! \p[2]\s[24]Augh!\w5 How dare she!\w7 Doesn't she know we just want to show her how much we love and appreciate her and everything she does \1\s[10]\p[2]\s[24]for us? \w5\0\s[6]And finally let us borrow her nice pen that she uses for very important paperwork?\w4 \p[2]\s[24]Of course, \1\s[12]\c\p[2]that too. \c\w8\0\s[0]\c\p[2]\s[24]Alright, \w3let's go find out where she \f[italic,1]actually\f[italic,0] is- \1\s[12]Guys,\w2 guys,\w2 wait just a minute.\w4 Haven't you noticed anything here? \w8\0\s[3]There's an unusual lack of clam chowder? \w4\p[2]\s[24]And a lack of good interior design. \w5\1\s[10]No,\w2 no,\w2 no.\w4 Well,\w2 yes, \w2but not what I was talking about.\w5 We've been standing here disscussing for a whole minute, \w3and our new friend hasn't even had a single eye-twitch!\w4 \p[2]\s[24]Really? \w4\0\s[1]That must be a new record! \w3\1\s[21]Not quite. \w2The longest time for us meeting someone new and them developing an eye-twitch is one minute and fifty-six seconds. \p[2]\s[24]Well, you're almost there new friend! \w3\1\s[12]Oh, \w2nope. \w3I saw a twitch. \w5\0\s[0]Awww. \w5\p[2]\s[24]Maybe next time new friend! \c\0\c\1\s[10]\cHey, we can't keep calling our new friend 'new friend'. That'll get confusing. \p[2]\s[24]You're right. \w3We do have a lot of new friends.\0\s[0]I think he meant if we introduce all our new friends to each other, they won't know who we're talking to. \p[2]\s[24]Yeah.\w2.\w2.\w4 That would get confusing too. \1\s[10]Well?\w4 Whad'ya say?\w2 Is there something we should call you that's \f[italic,1]not\f[italic,0] 'new friend'?\x\w8\![leave,passivemode]\w5\![open,inputbox,OnNameTeach,-1]"
		
		//Make sure to set up poses for both characters right when you start, otherwise one will be invisible until they speak.
		//Note also the use of the \x and \c tags.
 	}
	else
 	{
		//---- This is dialogue for when the user uninstalls the ghost for whatever reason, then reinstalls them again. They will run this dialogue instead of their normal dialogue above. You'll see this if you try to run OnFirstBoot using ![raise] without the extra 0 as mentioned above.
 		{
 		"\0\s[0]\p[2]\s[24]\1\s[12]You should know you can't get rid of us that easily, %(username).\0\s[1]Yeah, there's still snacks around here I haven't tried!\e"
		}
 	}
}

//Below are the choices that were defined at the end of the OnFirstBoot dialogue up there. These define the values your ghost will be using for pronouns according to what the user selected.

Select.choicefirsthehim
{
	presuffix = "masculine"
	himher = "him"
	heshe = "he"
	hisher = "his"
	hesshes = "he's"
	--
	NameInput
}

Select.choicefirstsheher
{
	presuffix = "feminine"
	himher = "her"
	heshe = "she"
	hisher = "her"
	hesshes = "she's"
	--
	NameInput
}

Select.choicefirsttheythem
{
	himher = "them"
	heshe = "they"
	hisher = "theirs"
	hesshes = "they're"
	--
	NameInput
}


//--NameInput

//NameInput is the next step in our introduction sequence. Now that the ghost has the pronouns set properly, they can ask the user for their name. It's done in this order so they'll know what prefixes will be appropriate for their name, like Mr. to he/him for example.

NameInput
{
	//Note that there's a \![leave,passivemode] tag in this dialogue! Don't forget about this!
	
	"\1\s[10]\![leave,passivemode]\w8\![open,inputbox,OnNameTeach,-1]\e"
	
	//At the end of this dialogue there's a tag saying "\![open,inputbox,OnNameTeach,-1]". It basically leads to the naming function defined in nameteach.dic, so don't touch it. Make sure it's there though! Otherwise your user won't have a way to put in their name. :o
	
	//*********************Advanced User Info*******************************
	//What this tag basically means is that you're calling a function at the end of the dialogue with the \! tag, you are telling it to open, you're telling it to open an inputbox, and you're telling that inputbox to link to a function called OnNameTeach, which is in the nameteach.dic file.
	//The -1 at the end determines how long the box will be open until it times out. -1 means it shouldn't time out at all, I think.
	//***********************************************************************
}

//--timeslot

//This is another unique function to tell what time of day it is. This is used for specialized dialogue related to the day.

timeslot
{
	if hour >= 5 && hour <= 8
	{	"earlymorning"	}
	elseif hour >= 9 && hour <= 11
	{	"morning"	}
	elseif hour >= 12 && hour <= 14
	{	"lunch"	}
	elseif hour >= 15 && hour <= 17
	{	"afternoon"	}
	elseif hour >= 18 && hour <= 20
	{	"evening"	}
	elseif hour >= 21 && hour <= 24
	{ "latenight"	}
	else
	{ "midnight" }
}

//--dayslot

//Like the above, but to find out what day it is. You can primarily use this for specialized dialogue on certain days, like the user's birthday.
dayslot
{
	"%(month)month %(day)day"
}


//-----------------------Normal Booting----------------------------

//From this point on, the dialogue will be for any normal boot of your ghost. You can specialize this for certain days or times if you like, or if you're uninterested, leave it very simple.


//--OnBoot

//As you can probably guess, OnBoot runs when you boot your ghost.
//*********************Advanced User Info*******************************
//You can also stick any values you want to reset on boot into their own function, like "BootReset", then run BootReset instead during boot so it's a bit less unwieldy.
//***********************************************************************

OnBoot
 {
	lastTalk = "" 
	passhour = 0
	passmin = 0
	passsec = 0
	
 	"\0\s[0]\1\s[10]\p[2]\s[24]" //This sets them up in their neutral pose for now.	
	--
	
	if dayslot == userbirthday 	
	{
				"\1\s[10]It's %(bornmonthprint) %(borndayprint).\w4\s[11] You know what that means!\w8\p[2]\s[25]Of course we do, how could we forget?\w8\0\s[1]%(username)'s birthday! \_s\nHappy birthday %(username)!\e" 
				
				//Notice in this dialogue that there are two new envelopes, %(bornmonthprint) and %(borndayprint). These two things basically display the user's birthday - bornmonthprint is the month and borndayprint is the day.
	}
	else
	{
		"%(normalboottalk)" //If none of the days above match the current date, the ghost instead will go down to the next function, normalboottalk.
	}
}


//--normalboottalk

//normalboottalk will vary their dialogue in a few different ways depending on the time and weekday.

normalboottalk
{
	if RAND(100) < 40 //What this does is choose a random number from 1-100, and then checks if that number is less than 40. If it's less than forty, then these dialogue pieces will occur.
		{
		"\0\s[0]Hello %(username)!\w5\1\s[10]Howdy!\w5\p[2]\s[24]Greetings!\e"
		}
 	else
 	{
		//The following if statements check the time of the day as defined above in the GetTimeSlot function.
		
		if timeslot == "earlymorning"
		{
		"\1\s[10]It's very early isn't it %(username)?\0\s[3]Too early... Need a minute to wake up...\e"
		}
		elseif timeslot == "morning"
		{
		"\0\s[1]Good morning!\e"
		
		"\1\s[11]Good morning!\e"

		"\p[2]\s[24]Good morning!\e"
		}
		elseif timeslot == "lunch"
		{
		"\0\s[6]I hope you invited us here for lunch, %(username).\e"
		}
		elseif timeslot == "afternoon"
		{
		"\1\s[10]Ah, %(username)! \s[11]What a fine time to invite us over!\e"
		}
		elseif timeslot == "evening"
		{
 		"\0Good evening!\e"

 		"\1\s[10]Good evening!\e"

 		"\p[2]\s[24]Good evening!\e"
		}
		elseif timeslot == "latenight"
		{
 		"\1\s[10]Bit late isn't it, %(username)?\p[2]\s[24]Yeah, it'd be past our bedtime if we had one!\e"
		}
		else //the last timeslot we haven't done is midnight, which is what's under here.
		{
		"\0\s[0]You're getting a midnight snack too %(username)?\w4 \s[1]I got myself some %(foods)!\e"

		"\p[2]\s[24]You better have a good reason for calling us here this late.\w4\1\s[10]We're missing out on our beauty sleep.\e"
		}
	}
}


//--OnClose

//OnClose runs when you close your ghost. Like OnBoot, this can be customized for times and days if you like, as you saw above. It can also be easily simplified down to. Although do note, close dialogue must end with a \- instead of \e. \- will close the program.
//Note though that each bit here ends with \w8 instead of \e. That's because the actual end statement to close the ghost is at the very end, one of the very very rare times you won't have to end a line with \e. Instead, end it with \w8 so there's a little bit of a pause for the user before your ghost closes so they can read the last message.

OnClose
 {
	if passmin >= 5 || passhour > 0	//This checks to see if you've had them open for at least five minutes.
		{
			if RAND(100) < 40 //see above about the random number generator
			{
				"\1\s[10]Cya!\w8\w8"

				"\p[2]\s[24]Goodbye!\w8\w8"

				"\0\s[1]See you next snack-time!\w8\w8"
			}
			else
			{
			if timeslot == "earlymorning"
				{
					"\p[2]\s[24]I don't know about you guys, but I'm going back to sleep.\1\s[10]Right there with you.\0\s[0]I still hear my bed calling my name.\w8"
				}
			elseif timeslot == "morning"
 				{
 					"\0\s[1]Have a good day!\w8\w8"
 				}
 			elseif timeslot == "lunch"
 				{
 					"\0\s[8]I'm going to get some %(foods).\w8\w8"
 				}
 			elseif timeslot == "afternoon"
 				{
 					"\p[2]\s[24]We're off!\w3\1\s[10]We've got some mischief to get to!\w8\w8"
 				}
  			elseif timeslot == "evening"
 				{
 					"\1\s[[10]Don't go to bed too late!\w8\p[2]\s[24]Make sure you get your beauty sleep!"
 				}
			elseif timeslot == "latenight"
			 	{
 						"\p[2]\s[24]Good night!\w8"
 						"\1\s[10]Good night!\w8"
 						"\0\s[1]Good night!\w8"
 				}
			else //like above, this is the midnight time slot since it's the last one left.
 				{
						"\0\s[1]I'm going to get a midnight snack!\w8"
				}
			}
				
 		}
 		
 		
 	else //This dialogue is for if they haven't been open for at least five minutes.
 	{
 		"\0\s[0]Leaving already?\p[2]\s[27]But we just got here!\w8\w8"
 	}
 	--
	"\-\e" //this bit of code actually closes and ends the ghost. Because \e is here, you don't have to end each line above with it.
 }


 //-------------------------State Changing--------------------
 //From here on, most of the dialogue will have to do with changing shells, ghosts, or states in some way.
 
 
 //--OnWindowStateMinimize

//This will run when you minimize them.

 OnWindowStateMinimize
 {
	"\1\s[10]Going tiny mode!\p[2]\s[25]That just means we'll get cuter, right?\w8\e"

	"\0\s[0]Don't worry %(username), \s[1]we'll be back.\w8\e"
}

//--OnWindowStateRestore

//This will run when they come back up.

OnWindowStateRestore
 {
 	"\0\s[0]\1\s[10]\p[2]\s[24]"
 	--
	"\0We're back!\w5\1\s[10]What did we miss?\e"

	"\0We're back!\w5\p[2]What did we miss?\e"

	"\1\s[10]We're back!\w5\0What did we miss?\e"

	"\1\s[10]We're back!\w5\p[2]What did we miss?\e"

	"\p[2]We're back!\w5\0What did we miss?\e"

	"\p[2]We're back!\w5\1\s[10]What did we miss?\e"
}


//--OnGhostChanging

OnGhostChanging
 {
	if reference0 == "The Animaniacs" //Replace this with the name of your Sakura character as you put in install.txt or descript.txt.
	{
		"\0Oh, are we going to have snacks when we're done?\w8\w8\e"

		"\p[2]Did something change?\1We'll find out when we get back!\w8\w8\e"

		"\1\s[10]Is there something new for us?\p[2]Oooh, I'm so excited!\w8\w8\e"
	}
 	else //If you're switching to another Ghost.
	{
		"\0Going to see %(reference0) now?\p[2]Well feel free to call us back anytime!\w8\w8\e"

		"\1\s[10]%(reference0)? Never heard of them.\p[2]I'm sure we're the cuter ones.\w8\w8\e"
		
		//In OnGhostChanging, %(reference0) stores the name of the ghost being swapped to, so if you want to display what you're switching to, you can use %(reference0) as in this example.
	}
}


//--OnGhostChanged

//A sister to the above, this runs after the ghost has either reloaded itself, or when you switch from another ghost to this ghost.

OnGhostChanged
{
	"\0\s[0]\1\s[10]\p[2]\s[24]" //this sets up their default poses
	--
	if reference0 == "The Animaniacs" //As above, this should be the name of your ghost as in install.txt or descript.txt.
	{
		"\0\1\s[10]\_sWe're baAaaAaAack!\e"
	}
	else
	{
		"\1\s[10]Goodbye, %(reference0)!\w8\0Nice to see you!\e"

		"\p[2]So we \f[italic,true]are\f[italic,false] more fun to have around than %(reference0), right?\1\s[10]Of course we are. Why else would %(username) call us back here instead of them?\e"

		//Again, %(reference0) in this function is the name of the ghost in question.
	}
}


//--OnShellChanging

//This will run when you change your ghost's shell.

OnShellChanging
 {}
 
 
 //--OnShellChanged
 
 //The sister to the above, this is the dialogue after you've changed the shell.

OnShellChanged
 {
 	if reference0 == "The Animaniacs" //Again, this is the name of your shell as you put in the descript.txt file for that shell.
 	{
 		nowshell = "master" //This is the folder name for your shell. Not the same as the above! 
		
 		"\0\s[0]We're back to normal!\w8\1\s[21]Well, as normal as we get.\e"
 	}
 }


 //--OnDressupChanged
 
 //This runs whenever you fiddle with their clothing via the dress-up option, if you've set any for your ghost.

OnDressupChanged{}